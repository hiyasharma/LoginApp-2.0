/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package DataAccess;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;

/**
 *
 * @author hiyas
 */
public class RegistrationDAO {

    private Connection con;
    private PreparedStatement pst;
    private Statement st;


    public RegistrationDAO() {
        con = null;
        pst = null;
        st = null;
    }

    public void addNewRegistration(String first_name, String last_name,
            String email, String security_question, String security_answer,
            String username, String password) {

        int insertedUserKeyValue = 0;
        int insertedRegistrationKeyValue = 0;
        Timestamp timestamp = new Timestamp(System.currentTimeMillis());

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/devsprintdb", "root", "Hiya.S8!");

            String registrationQuery = "INSERT INTO registration ("
                    + "FIRST_NAME, "
                    + "LAST_NAME, "
                    + "EMAIL, "
                    + "SECURITY_QUESTION, "
                    + "SECURITY_ANSWER, "
                    + "CREATED_AT, "
                    + "UPDATED_AT, "
                    + "CREATED_BY, "
                    + "MODIFIED_BY) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";

            pst = con.prepareStatement(registrationQuery, PreparedStatement.RETURN_GENERATED_KEYS);

            // Set values for the parameters
            pst.setString(1, first_name);
            pst.setString(2, last_name);
            pst.setString(3, email);
            pst.setString(4, security_question);
            pst.setString(5, security_answer);
            pst.setString(6, timestamp.toString());
            pst.setString(7, timestamp.toString());
            pst.setDouble(8, -1);
            pst.setDouble(9, -1);

            // Execute the insert operation
            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                // Retrieve the autogenerated key insert ID
                ResultSet generatedKeys = pst.getGeneratedKeys();
                if (generatedKeys.next()) {
                    insertedRegistrationKeyValue = generatedKeys.getInt(1);
                }

            }

            String userQuery = "INSERT INTO users_x ("
                    + "USERNAME, "
                    + "USERTYPE, "
                    + "PASSWORD, "
                    + "ACTIVE, "
                    + "CREATED_AT, "
                    + "UPDATED_AT, "
                    + "CREATED_BY, "
                    + "MODIFIED_BY) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

            pst = con.prepareStatement(userQuery, PreparedStatement.RETURN_GENERATED_KEYS);

            // Set values for the parameters
            pst.setString(1, username);
            pst.setString(2, "member");
            pst.setString(3, password);
            pst.setInt(4, 0);
            pst.setString(5, timestamp.toString());
            pst.setString(6, timestamp.toString());
            pst.setDouble(7, -1);
            pst.setDouble(8, -1);

            // Execute the insert operation
            rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                // Retrieve the autogenerated key insert ID
                ResultSet generatedKeys = pst.getGeneratedKeys();
                if (generatedKeys.next()) {
                    insertedUserKeyValue = generatedKeys.getInt(1);
                }

            }

            st = con.createStatement();
            String registrationUpdateQuery = "UPDATE registration "
                    + "SET USER_ID = " + insertedUserKeyValue + " "
                    + "WHERE ID = " + insertedRegistrationKeyValue;

            st.executeUpdate(registrationUpdateQuery);
            
            String profileUpdateQuery = "INSERT INTO profile ("
                    + "USER_ID, "
                    + "FIRST_NAME, "
                    + "LAST_NAME, "
                    + "CREATED_AT, "
                    + "UPDATED_AT, "
                    + "CREATED_BY, "
                    + "MODIFIED_BY) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?)";
                    
            pst = con.prepareStatement(profileUpdateQuery, PreparedStatement.RETURN_GENERATED_KEYS);
            
            // Set values for the parameters
            pst.setDouble(1, insertedUserKeyValue);
            pst.setString(2, first_name);
            pst.setString(3, last_name);
            pst.setString(4, timestamp.toString());
            pst.setString(5, timestamp.toString());
            pst.setDouble(6, -1);
            pst.setDouble(7, -1);
            
            // Execute the insert operation
            pst.executeUpdate();
            
            pst.close();
            pst = null;
            st.close();
            st = null;    
            con.close();
            con = null;
            

        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("CLASS:RegistrationDAO METHOD:addNewRegistration MESSAGE: Connection not created!!!");

        } finally {
            /* close any jdbc instances here that weren't explicitly closed
             * during normal code path, so that we don't 'leak' resources...
             */

            if (pst != null) {
                try {
                    pst.close();
                } catch (SQLException sqlex) {
                    // ignore -- as we can't do anything about it here
                }

                pst = null;
            }

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException sqlex) {
                    // ignore -- as we can't do anything about it here
                }

                con = null;
            }

        }

    }
}
